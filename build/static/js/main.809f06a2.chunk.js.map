{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContacts","className","styles","list","map","contact","list_item","name","number","type","onClick","id","list_button","ContactForm","state","handelNameChange","event","setState","target","value","handleSubmit","preventDefault","props","onSubmit","resetForm","console","log","this","form","label","pattern","title","required","onChange","input","button","Component","Filter","children","div","App","filter","deleteContacts","contactsId","addContacts","data","cont","includes","alert","length","uuidv4","changeFilter","getVisibleContacts","normalizedFilter","toLocaleUpperCase","prevProps","prevState","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.809f06a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"App_div__21psy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","import styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul className={styles.list}>\n    {contacts.map(contact => (\n      <li key={contact.id} className={styles.list_item}>\n        <span>{contact.name}: </span>\n        <span>{contact.number}</span>\n        <button\n          type=\"button\"\n          onClick={() => onDeleteContacts(contact.id)}\n          className={styles.list_button}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onDeleteContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired\n    })\n  )\n};\n\nexport default ContactList;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\"\n  };\n\n  handelNameChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n\n    console.log(event);\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label className={styles.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handelNameChange}\n            className={styles.input}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            // title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            // required\n            value={this.state.number}\n            onChange={this.handelNameChange}\n            className={styles.input}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  handelNameChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired\n};\n\nexport default ContactForm;\n","import styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange, children }) => (\n  <div className={styles.div}>\n    {children}\n    <label className={styles.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={styles.input}\n      ></input>\n    </label>\n  </div>\n);\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport styles from \"./App.module.css\";\n\nimport \"normalize.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\"\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts\n      });\n    }\n  }\n\n  deleteContacts = contactsId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactsId)\n    }));\n  };\n\n  addContacts = data => {\n    const searchSameName = this.state.contacts\n      .map(cont => cont.name)\n      .includes(data.name);\n    if (searchSameName) {\n      alert(`${data.name} is already in contacts`);\n    } else if (data.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        id: uuidv4(),\n        name: data.name,\n        number: data.number\n      };\n\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts]\n      }));\n    }\n  };\n\n  changeFilter = event => {\n    this.setState({\n      filter: event.target.value\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLocaleUpperCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLocaleUpperCase().includes(normalizedFilter)\n    );\n\n    return visibleContacts;\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className={styles.div}>\n        <h2>Phonebook</h2>\n        <ContactForm onSubmit={this.addContacts} />\n\n        {contacts.length > 0 && (\n          <Filter value={filter} onChange={this.changeFilter}>\n            <h2>Contact</h2>\n          </Filter>\n        )}\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContacts={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"list_item\":\"ContactList_list_item__3uTNX\",\"list_button\":\"ContactList_list_button__3NhD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}